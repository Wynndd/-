小龙猜数字 (10 分)（失败函数 最短前后缀
我们称一个字符串的秩为：该字符串长度减去该字符串的最短相等前后缀的长度。
若该字符串不存在相等的前后缀，则其秩为0。

例如：abcabcxabcabc最短相等前后缀为abc，该字符串的秩为10。

Pororo和小龙玩猜字游戏，Pororo给出一个字符串S，小龙需计算S及S中所有前缀子串的秩之和。请编写程序帮助小龙猜数字。

/*
输入格式:
输入为2行，第1行为字符串S的长度，第2行为具体的字符串。字符串长度不超过10 
6
 。

输出格式:
输出 一个整数表示字符串S及其所有前缀的秩之和。

注：结果超出int型变量范围，请使用long long型变量。

输入样例1:
6
ababab
输出样例1:
12
样例1解释:
a的秩为0，ab的秩为0，aba的秩为2，abab的秩为2，ababa的秩为4，ababab的秩为4。

输入样例2:
10
bbcabbabbc
输出样例2:
32
*/

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
long long fail(char *p,int *prefix,int pl){
	prefix[0]=-1;
	int i,j,k;
	long long count=0;
	for(j=1;j<pl;j++){
		i=prefix[j-1];
		while(p[j]!=p[i+1]&&i>=0){
			i=prefix[i];
		}
		if(p[j]==p[i+1])
			prefix[j]=i+1;
		else prefix[j]=-1;
	}
	for(i=0;i<pl;i++){
		k=prefix[i];
		if(prefix[i]!=-1){
			if(prefix[k]!=-1){
				k=prefix[k]; 
			}
			prefix[i]=k;
			count=count+i-k;
		}
	}
	return count;
}
/*long long least(int *prefix,int n){
	long long count=0;
	int i=0,k=0;
	int tmp[100000];
	int houzhui; 
	for(i=0;i<n;i++){
		tmp[i]=prefix[i];
	}
	for(i=0;i<n;i++){
		k=tmp[i];
		if(tmp[i]!=-1){
			if(tmp[k]!=-1){
				k=tmp[k]; 
			}
			tmp[i]=k;
			count=count+i-k;
		}
	}
	return count;
}*/
int main(){
	int n=0;
	int i=0;
	long long result=0;
	char p[1000000];
	int prefix[1000000];
	scanf("%d",&n);
	scanf("%s",p);
	result=fail(p,prefix,n);
	printf("%lld",result);
	return 0;
}